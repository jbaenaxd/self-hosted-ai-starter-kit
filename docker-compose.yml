volumes:
  n8n_storage: null
  postgres_storage: null
  ollama_storage: null
  qdrant_storage: null
  mongo_data: null

networks:
  demo: null

x-n8n:
  image: 'n8nio/n8n:latest'
  networks:
    - demo
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - 'DB_POSTGRESDB_USER=${POSTGRES_USER}'
    - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}'
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
  links:
    - postgres

x-ollama:
  image: 'ollama/ollama:latest'
  container_name: ollama
  networks:
    - demo
  restart: unless-stopped
  ports:
    - '11434:11434'
  volumes:
    - 'ollama_storage:/root/.ollama'

x-init-ollama:
  image: 'ollama/ollama:latest'
  networks:
    - demo
  container_name: ollama-pull-llama
  volumes:
    - 'ollama_storage:/root/.ollama'
  entrypoint: /bin/sh
  command:
    - '-c'
    - 'sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2'

services:
  postgres:
    image: 'postgres:16-alpine'
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - 'postgres_storage:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 5s
      timeout: 5s
      retries: 10

  mongo:
    image: 'mongo:latest'
    networks:
      - demo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo_user
      - MONGO_INITDB_ROOT_PASSWORD=mongo_password
    ports:
      - '27017:27017'
    volumes:
      - 'mongo_data:/data/db'

  n8n-import:
    image: 'n8nio/n8n:latest'
    networks:
      - demo
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - 'DB_POSTGRESDB_USER=${POSTGRES_USER}'
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}'
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
    links:
      - postgres
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows'
    volumes:
      - './n8n/backup:/backup'
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    image: 'n8nio/n8n:latest'
    networks:
      - demo
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - 'DB_POSTGRESDB_USER=${POSTGRES_USER}'
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}'
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
    links:
      - postgres
    container_name: n8n
    restart: unless-stopped
    ports:
      - '5678:5678'
    volumes:
      - 'n8n_storage:/home/node/.n8n'
      - './n8n/backup:/backup'
      - './shared:/data/shared'
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks:
      - demo
    restart: unless-stopped
    ports:
      - '6333:6333'
    volumes:
      - 'qdrant_storage:/qdrant/storage'

  ollama-cpu:
    profiles:
      - cpu
    image: 'ollama/ollama:latest'
    container_name: ollama
    networks:
      - demo
    restart: unless-stopped
    ports:
      - '11434:11434'
    volumes:
      - 'ollama_storage:/root/.ollama'

  ollama-gpu:
    profiles:
      - gpu-nvidia
    image: 'ollama/ollama:latest'
    container_name: ollama
    networks:
      - demo
    restart: unless-stopped
    ports:
      - '11434:11434'
    volumes:
      - 'ollama_storage:/root/.ollama'
    deploy:
      resources:
        reservations:
          devices:
            -
              driver: nvidia
              count: 1
              capabilities:
                - gpu

  ollama-pull-llama-cpu:
    profiles:
      - cpu
    image: 'ollama/ollama:latest'
    networks:
      - demo
    container_name: ollama-pull-llama
    volumes:
      - 'ollama_storage:/root/.ollama'
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2'
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles:
      - gpu-nvidia
    image: 'ollama/ollama:latest'
    networks:
      - demo
    container_name: ollama-pull-llama
    volumes:
      - 'ollama_storage:/root/.ollama'
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2'
    depends_on:
      - ollama-gpu
